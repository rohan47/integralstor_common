#!/usr/bin/python
import os
from commands import getstatusoutput
import scheduler_utils
import os.path,time

def check_scan_file(name):
  try:
    f = open('/opt/integralstor/integralstor_unicell/config/clamav/scan_list.txt','r')
    q = f.read()
    x = q.split('\n')
    f.close()
    if '/'+name in x:
      return 'on',None
    else:
      return 'off',None
  except:
    return None,'File "/opt/integralstor/integralstor_unicell/config/clamav/scan_list.txt" not Found'

def change_scan_file(name, changed):
  try:
    if changed not in ['on','off']:
      raise Exception('invalid parameter, use only the menus and checkboxes')
    old_status,err = check_scan_file(name)
    if err:
      raise Exception(err)
    if changed == 'on' and old_status == 'off':
      f=open('/opt/integralstor/integralstor_unicell/config/clamav/scan_list.txt','a')
      f.write('/'+name+'\n')
      f.close()
      return 'on',None
    elif changed == 'off' and old_status == 'on':
      f=open('/opt/integralstor/integralstor_unicell/config/clamav/scan_list.txt','r')
      lines = f.readlines()
      f.close()
      f=open('/opt/integralstor/integralstor_unicell/config/clamav/scan_list.txt','w')
      for line in lines:
        if line.strip('\n') != '/'+name :
          f.write(line)
      f.close()
      return 'off',None
  except Exception , e :
    return None,str(e)

def vs_log():
  try:
    f = open('/opt/integralstor/integralstor_unicell/config/logs/clamav/clamav.log','r')
    f.seek(0)
    lines = f.read()
    av_log_list = lines.split('\n')
    f.close()
    av_log_list.reverse()
    return av_log_list,None
  except:
    return None,'File "/opt/integralstor/integralstor_unicell/config/logs/clamav/clamav.log" not Found.'



def get_file():
  try:
    conf = open('/opt/integralstor/integralstor_unicell/config/clamav/config/clamd.conf','r')
    conff = conf.read()
    conf.close()
    spl = conff.split('\n')
    dct = dict()
    for i in spl:
      if i=='':
        pass
      elif i[0]=='#':
        pass
      else :
        entry = i.split(' ')
        if entry[0] != 'VirusEvent' :
          dct.update({entry[0]:entry[1]})
    return dct,None
  except:
    return None,'File "/opt/integralstor/integralstor_unicell/config/clamav/config/clamd.conf" not found'

def get_file_updater():
  try:
    conf = open('/opt/integralstor/integralstor_unicell/config/clamav/config/freshclam.conf','r')
    conff = conf.read()
    conf.close()
    spl = conff.split('\n')
    dct = dict()
    for i in spl:
      if i=='':
        pass
      elif i[0]=='#':
        pass
      else :
        entry = i.split(' ')
        if entry[0] != 'OnOutdatedExecute' :
          dct.update({entry[0]:entry[1]})
    return dct,None
  except:
    return None,'File "/opt/integralstor/integralstor_unicell/config/clamav/config/freshclam.conf" not found.'



def write_conf(dct):
  try:
    conf=open('/opt/integralstor/integralstor_unicell/config/clamav/config/clamd.conf','w')
    for key in dct.iterkeys():
      conf.write(key+' '+dct[key]+'\n')
    conf.write('VirusEvent /opt/integralstor/integralstor_unicell/scripts/python/virusevent.py "%v"\n')
    conf.close()
    #st,cm = getstatusoutput('sudo ln -s /opt/integralstor/integralstor_unicell/config/clamav/config/clamd.conf /etc/clam.d/scan.conf')
    #st,cm = getstatusoutput('ln -s /opt/integralstor/integralstor_unicell/config/clamav/config/clamd.conf /etc/clam.d/scan.conf')
    #if st !=0:
    #   raise Exception(cm)
    st,cm = getstatusoutput('systemctl restart clamd@scan')
    if st !=0:
      raise Exception(cm)
    return 'changed',None
  except Exception,e:
    return None,str(e)


def write_conf_updater(dct):
  try:
    conf=open('/opt/integralstor/integralstor_unicell/config/clamav/config/freshclam.conf','w')
    for key in dct.iterkeys():
      conf.write(key+' '+dct[key]+'\n')
    conf.write('OnOutdatedExecute /opt/integralstor/integralstor_unicell/scripts/python/update_event.py "%v"\n')
    conf.close()
    st,cm = getstatusoutput('killall freshclam')
    st,cm = getstatusoutput('freshclam -d')
    if st !=0:
      raise Exception(cm)
    return 'changed',None
  except Exception,e:
    return None,str(e)

#[u'0', u'0', u'*', u'*', u'*']
def add_cron(schedule):
  try:
    f = open('/opt/integralstor/integralstor_unicell/config/clamav/cron_id','r')
    old_cron_id = int(f.read())
    f.close()
    cron_remove,err = scheduler_utils.remove_cron(old_cron_id)
    if err:
      raise Exception(err)
    cmd = 'clamdscan --no-summary --quiet -m -c /etc/clamd.d/scan.conf --move /opt/integralstor/integralstor_unicell/config/clamav/quarantine/  -f  /opt/integralstor/integralstor_unicell/config/clamav/scan_list.txt '
    description = 'ClamAV Scan'
    cron_task_id, err = scheduler_utils.add_cron_task(cmd, description,schedule[0],schedule[1],schedule[2],schedule[3],schedule[4])
    if err:
      raise Exception(err)
    f = open('/opt/integralstor/integralstor_unicell/config/clamav/cron_id','w')
    f.write(str(cron_task_id))
    f.close()
    return cron_task_id, None
  except Exception, e :
    return None, str(e)

def get_cron_id():
  try:
    f = open('/opt/integralstor/integralstor_unicell/config/clamav/cron_id','r')
    cron_task_id = int(f.read())
    f.close()
    if cron_task_id == 99:
      schedule=[u'0', u'0', u'*', u'*', u'*']
      cmd = 'clamdscan --no-summary --quiet -m -c /etc/clamd.d/scan.conf --move /opt/integralstor/integralstor_unicell/config/clamav/quarantine/  -f  /opt/integralstor/integralstor_unicell/config/clamav/scan_list.txt '
      description = 'ClamAV Scan'
      cron_task_id, err = scheduler_utils.add_cron_task(cmd, description,schedule[0],schedule[1],schedule[2],schedule[3],schedule[4])
      if err:
        raise Exception(err)
        f = open('/opt/integralstor/integralstor_unicell/config/clamav/cron_id','w')
        f.write(str(cron_task_id))
        f.close()
      return cron_task_id, None
    return cron_task_id, None
  except Exception,e:
    return None, 'Error retriving cron id.'

def match_date(filename):
  try:
    file_stamp = time.ctime(os.path.getctime('/opt/integralstor/integralstor_unicell/config/clamav/virus_definations/'+filename))
    file_stamp = file_stamp.split(' ')
    current_time = time.ctime()
    current_time = current_time.split(' ')
    if '' in file_stamp:
      file_stamp.remove('')
    if '' in current_time:
      current_time.remove('')
    if file_stamp[0] == current_time[0] and file_stamp[1] == current_time[1] and file_stamp[2] == current_time[2] and file_stamp[4] == current_time[4]:
      return 'valid',None
    else:
      return 'invalid',None
  except Exception,e:
    return None,"unable to check time stamp of the update file"



